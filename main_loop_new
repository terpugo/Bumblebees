#!/bin/bash

if [ $# -ne 2 ]
then
  echo "Usage: profile container_name"
  exit 1
fi

profile=$1
con_name=$2
auth_log=/root/containers/${con_name}/rootfs/var/log/auth.log

if [ "$profile" = "02" ]; then
  mitm_port=10001
  con_IP=172.20.0.2
elif [ "$profile" = "03" ]; then
  mitm_port=10002
  con_IP=172.20.0.3
elif [ "$profile" = "04" ]; then
  mitm_port=10003
  con_IP=172.20.0.4
else
  mitm_port=10004
  con_IP=172.20.0.5
fi

while true
do
  num=$(python3 -c "import random; print(random.randint(1,3))")
  echo config num is $num
  timestamp="$(date +%s)"
  /home/aces/Bumblebees/creation $con_name $profile $num $timestamp
  data_collection="/home/aces/Bumblebees/Attacker_Data/${con_name}_${timestamp}.txt"
  mitm_log="/home/aces/Bumblebees/${con_name}_logs/${con_name}_${timestamp}.log"

  # stream only new lines; check both connect and disconnect in same loop
  sudo tail -n0 -F ${auth_log} | while read -r LINE
  do
      if echo "$LINE" | grep -q "Accepted password"
      then

	attacker_ip=$(sudo cat $auth_log | grep "Accepted password" | cut -d' ' -f11)
	echo $attacker_ip

	#sudo /sbin/iptables -I INPUT -d 172.20.0.1 -p tcp --dport $mitm_port -j DROP
	#sudo /sbin/iptables -I INPUT 1 -s $attacker_ip -d 172.20.0.1 -p tcp --dport $mitm_port -j ACCEPT

	# ensure attacker is explicitly allowed for new + established (put this at the top)
        sudo /sbin/iptables -I INPUT 1 -s $attacker_ip -d 172.20.0.1 -p tcp --dport $mitm_port \
        -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT

       # insert a DROP that only applies to NEW connection attempts (won't kill ESTABLISHED)
       sudo /sbin/iptables -I INPUT 2 -d 172.20.0.1 -p tcp --dport $mitm_port \
       -m conntrack --ctstate NEW -j DROP

	
        sudo screen -dmS timer_${con_name} /home/aces/Bumblebees/time_attacker $con_name $timestamp
        sudo screen -dmS idle_${con_name} /home/aces/Bumblebees/idle_time_new $con_name 120 $timestamp
        /home/aces/Bumblebees/slack.sh C09MYJC3M4N "$(date): attacker is inside ${con_name}"
        

      fi

      if echo "$LINE" | grep -q "Disconnected from user" || echo "$LINE" | grep -q "Attacker timed out"; then

          # kill the tail process streaming that specific auth_log
          out=$(date +"%Y-%m-%d %H:%M:%S.%3N")
          echo "$out" > "$data_collection"
          
	  #sudo /sbin/iptables -D INPUT -d 172.20.0.1 -p tcp --dport $mitm_port -j DROP
          #sudo /sbin/iptables -D INPUT -s $attacker_ip -d 172.20.0.1 -p tcp --dport $mitm_port -j ACCEPT

          
          sudo /sbin/iptables -D INPUT 1 -s $attacker_ip -d 172.20.0.1 -p tcp --dport $mitm_port \
          -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT

          sudo /sbin/iptables -D INPUT 2 -d 172.20.0.1 -p tcp --dport $mitm_port \
          -m conntrack --ctstate NEW -j DROP

          sudo pkill -f "tail -n0 -F ${auth_log}" || true
          sudo screen -S "timer_${con_name}" -X quit
          sudo screen -S "idle_${con_name}" -X quit

          if [[ "$LINE" == *"Attacker timed out"* ]]; then
            echo "yes" >> "$data_collection"
          else
            echo "no" >> "$data_collection"
          fi


          /home/aces/Bumblebees/deletion_script $con_name
          sleep 2
          /home/aces/Bumblebees/parsing_commands $con_name $num $timestamp
          /home/aces/Bumblebees/slack.sh C09MYJC3M4N "$(date): attacker left at $out, ${con_name} deleted, and mitm log parsed"

          # break inner loop so outer while restarts
          break
      fi
  done

  # tiny pause
  sleep 1
done
